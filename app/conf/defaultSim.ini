rate           10			                            # Period used by the module. Default set to 10ms
robot          icubSim			                        # Robot name (icubSim or icub). Set to icub by default
local_name     ISIR                 # Prefix of the ports opened by the module. Set to the module name by default, i.e. balancerModule.
verbose	       on                                     # [on/off] Prints relevant data for debugging.

display_only   on                              # [on/off] Flag whether to display computed zmp on iCubGui or on terminal if verbose is on
no_sensors     on                              # [on/off] Flag for preventing the module from reading additional sesnors (the ones not available in iCubSim)

#display_zmp	off                                     #
torso_compensation  off                                     # [on/off] Enables balancing using the torso to compensate for whole body angular momentum
springs_legs	     off                                     # [on/off] Uses right gains when springs have been set at the joints level
feet_sensors        off                                     # [on/off] Uses F/T sensors at the ankles.
wbs_name		/wholeBodyDynamics                      # Name of the wholeBodyDynamics module that is to be used by the module

# the list of drivers that we will use for the control
using_gaze 			off
using_cartesian_arm_left	off		
using_cartesian_arm_right	off
using_left_arm  on
using_right_arm on
using_head      on
using_left_leg	on
using_right_leg	on
using_torso	on

enableTorso         true
enableTrackingMode  false

on_table        on
table_height	0.0
minX_distanceFromTorso  -0.1
maxY_reachLeftArm        0.05
maxY_reachRightArm      -0.05

traj_time       3.0
reach_tol       0.01

# cartesian solver/controller
cartesian_tolerances	0.001 0.001 0.001 0.001 0.001 0.001 0.001

home_arm_poss    -30.0 30.0 0.0  45.0 0.0  0.0  0.0
home_arm_vels    10.0  10.0 10.0 10.0 10.0 10.0 10.0
left_init	-0.183652 -0.379195 0.283698 -0.469896 0.339242 -0.814931 2.753132
right_init	-0.170824 0.38284 0.293344 -0.229312 -0.906931 0.3534 2.153547
left_reach	-0.313217 -0.184138 0.165983 0.124358 -0.059604 0.990445 2.920366
right_reach	-0.317223 0.207304 0.146778 0.049526 -0.993858 -0.098967 2.96678
left_touchtable	       -0.32 -0.2 0.05 -0.03872 -0.021682 -0.999015 2.870175
right_touchtable       -0.32 0.2 0.05 -0.132493 -0.989974 -0.048952 3.053597



w0RL                   (0 0 0 0 0 0)                    # specify the wrench (force/torque) offset for the right leg F/T sensor
w0LL                   (0 0 0 0 0 0)                    # specify the wrench (force/torque) offset for the  left leg F/T sensor

q0RL_both              (9.7 2.0 0.0 -9.7 0.0 -2.0)      # initial configuration right leg
q0LL_both              (9.7 2.0 0.0 -9.7 0.0 -2.0)      # initial configuration left  leg
q0TO_both              (0.0 0.0 0.0)                    # initial configuration torso

q0RL_left              (4.6 10.5  0.6  0.0  2.5 -14.3)  # initial configuration right leg
q0LL_left              (9.7 -10.0 -0.4 -9.4 -1.9 8.0)   # initial configuration left  leg
q0TO_left              (0.0 12.0 0.0)                   # initial configuration torso

q0RL_right             (9.7 -10.0 -0.4 -9.4 -1.9 8.0)   # initial configuration right leg
q0LL_right             (4.6 10.5  0.6  0.0  2.5 -14.3)  # initial configuration left  leg
q0TO_right             (0.0 -12.0 0.0)                  # initial configuration torso

njRL                    6                                # specify number of joints in the right leg
njLL                    6                                # specify number of joints in the  left leg
njTO                    3                                # specify number of joints in the     torso
njRA			7	#number of joints in the right arm
njLA			7	#number of joints in the left arm
njRA_torques		5	#number of joints in the right arm that can be controlled in torques or impedance
njLA_torques		5       #number of joints in the left arm that can be controlled in torques or impedance

r2l_jointsSwgLeg       (1 1 1 1 1 1)                    # (0/1 vector) specify the joints of the swing   leg dedicated to the right to left foot displacement controller
r2l_jointsSupLeg       (1 0 1 1 1 1)                    # (0/1 vector) specify the joints of the support leg dedicated to the right to left foot displacement controller
com_jointsTorso        (0 0 1)                          # (0/1 vector) specify the joints of the     torso dedicated to the COM controller



[torso]
pitch on  (max 10.0)
roll  off
yaw   on


[left_arm]
hand_orientation   -0.064485 0.707066 -0.704201 3.140572
hand_orientation_table   -0.03872 -0.021682 -0.999015 2.870175
impedance_velocity_mode off
impedance_stiffness 0.5 0.5 0.5 0.2 0.1
impedance_damping   0.06 0.06 0.06 0.02 0.0


[right_arm]
hand_orientation   -0.012968 -0.721210 0.692595 2.917075
hand_orientation_table   -0.132493 -0.989974 -0.048952 3.053597
impedance_velocity_mode off
impedance_stiffness 0.5 0.5 0.5 0.2 0.1
impedance_damping   0.06 0.06 0.06 0.02 0.0


[left_leg]
impedance_velocity_mode off
impedance_stiffness 1.0 1.0 0.7 0.6 0.6 0.6
impedance_damping   0.02 0.02 0.02 0.02 0.02 0.02


[right_leg]
impedance_velocity_mode off
impedance_stiffness 1.0 1.0 0.7 0.6 0.6 0.6
impedance_damping   0.02 0.02 0.02 0.02 0.02 0.02

[head]
home_front   -1.0 0.0 0.3
home_table   -1.0 0.0 0.0



[SATURATIONS]
vel_sat                10.0                             # Maximum velocity (as saturation)

[COM_GAINS]
pi_a_d_right          (0.0   0.0  0.013)               # Desired ZMP position while in right  foot support (expressed in * right * foot coordinates): y, z coordinates only
pi_a_d_both           (0.0  -0.1  0.013)               # Desired ZMP position while in double foot support (expressed in * right * foot coordinates): y, z coordinates only
pi_c_d_left           (0.0   0.0  0.013)               # Desired ZMP position while in left   foot support (expressed in * left  * foot coordinates): y, z coordinates only

Kp_h                     5.0                            # Proportional gain for x direction of zmp controller
Kd_h                     0.0                            # Derivative gain for x direction of zmp controller
Kp_x                   100.0                            # Proportional gain for x direction of zmp controller
Kd_x                     0.0                            # Derivative gain for x direction of zmp controller
Kp_y                   100.0                            # Proportional gain for y direction of zmp controller
Kd_y                     0.0                            # Derivative gain for y direction of zmp controller

[R2L_GAINS]

Kp                    1000.0                            # Proportional gain for the right to left foot displacement controller
Kd                     100.0                            # Proportional gain for the right to left foot orientation controller
